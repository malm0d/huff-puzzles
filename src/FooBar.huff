
/** 
 *  FOO_BAR HUFF EXERCISE
 *
 *  Majority of ethereum contracts hold logic divide this logic into functions which users can specify and call to execute a particular logic without clashing into the other
 *  
 *  The task is to write within the `MAIN` macro below, huff code that mimics 2 solidity functions. 
 *      - One named `foo()` that simply returns 2,
 *      - the second named `bar()` that simply returns 3.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function foo() payable returns(uint256)
#define function bar() payable returns(uint256)

#define macro FOO() = takes(0) returns(0) {
    0x02                    //[0x02]
    0x00                    //[0x00, 0x02]
    mstore                  //[]
    0x20 0x00 return
}

#define macro BAR() = takes(0) returns(0) {
    0x03                    //[0x03]
    0x00                    //[0x00, 0x03]
    mstore                  //[]
    0x20 0x00 return
}

#define macro MAIN() = takes(0) returns(0) {
    //Get function selector from calldata
    0x00                    //[0x00] (0 offset)
    calldataload            //[calldata @ 0x00]
    0xE0                    //[0xE0, calldata @ 0x00]
    shr                     //[func_sig (calldata @ 0x00 >> 0xE0)]

    //Check function selector
    dup1                    //[func_sig, func_sig]
    __FUNC_SIG(foo)         //[func_sig(foo), func_sig, func_sig]
    eq                      //[func_sig == func_sig(foo), func_sig] => [1] or [0] (true or false)
    foo                     //[foo, (1 or 0), func_sig]
    jumpi                   //[func_sig] (if 1, jump to foo, else next instruction)

    __FUNC_SIG(bar)         //[func_sig(bar), func_sig]
    eq                      //[func_sig(bar) == func_sig] => [1] or [0] (true or false)
    bar                     //[bar, (1 or 0)]
    jumpi                   //[] (if 1, jump to bar, else next instruction)

    //Revert if function not recognized
    0x00 dup1 revert

    //jump labels w macros
    foo:
        FOO()
    bar:
        BAR()
}

//is it more efficient to have return in the main macro or individual macros?